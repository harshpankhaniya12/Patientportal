@page
@model Patientportal.Pages.Calendar.IndexModel
@* @{
    ViewData["Title"] = "Calendar";
    Layout = "_LayoutMainAppoinment";
} *@
<link rel="stylesheet" href="~/css/responsive.css">
<link rel="stylesheet" href="~/css/bootstrap.min.css">
<link rel="stylesheet" href="~/css/custom.css">
<link rel="stylesheet" href="~/css/responsive.css">
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var doctorBlockTimes = @Html.Raw(Json.Serialize(Model.Doctorblocktime));

        if (doctorBlockTimes.length === 0) {
            console.log("No blocked appointments found.");
        } else {
            console.log("Blocked Appointments:", doctorBlockTimes);
        }

        var scheduleObj = document.getElementById('schedule').ej2_instances[0];

        // Convert data to Scheduler format
        var blockAppointments = doctorBlockTimes.map(function (item) {
            return {
                Id: item.id, // Ensure this matches your data model
                Subject: 'Not available', // Blocked slot label
                StartTime: new Date(item.appointmentStartTime),
                EndTime: new Date(item.appointmentEndDateTime),
                IsReadonly: true // Makes event non-editable
            };
        });

        // Debugging output
        console.log("Final Event Data for Scheduler:", blockAppointments);

        // Set the scheduler events
        scheduleObj.eventSettings.dataSource = blockAppointments;
    });
</script>

<div class="control-section full-screen-schedule">
    <div class="schedule-wrapper">
        <ejs-schedule id="schedule"
                      width="100%" height="100%"
                      selectedDate="DateTime.Today"
                      startHour="10:00" endHour="19:15"
                      allowDragAndDrop="false" allowResizing="false"
                      workDays="new int[] {1, 2, 3, 4, 5}"
                      cellClick="onCellClick">
            <e-schedule-timescale interval="15" slotCount="1"></e-schedule-timescale>
            <e-schedule-eventsettings dataSource="Model.Doctorblocktime" template="#blockTemplate"></e-schedule-eventsettings>
        </ejs-schedule>
    </div>
</div>

<script>
    function onPopupOpen(args) {
        // Quick popup open hone se rokna
        if (args.type === "QuickInfo") {
            args.cancel = true;
        }
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var scheduleObj = document.getElementById('schedule').ej2_instances[0];

        scheduleObj.popupOpen = function (args) {
            if (args.type === "Editor" && args.data.Id === undefined) {
                args.cancel = true; // Disable double-click popup (event creation popup)
            }
        };
    });
</script>


<script>
    function onCellClick(args) {
        // Prevent default popup behavior
        args.cancel = true;

        var currentDateTime = new Date(); // Current Date & Time
        var clickedDateTime = new Date(args.startTime); // Clicked Cell Date & Time

        // Agar clicked datetime past hai toh click event ko rok do
        if (clickedDateTime < currentDateTime) {
            alert("You cannot select this time or date for appointments.");
            return; // Stop execution (No redirect)
        }
        var clickedDate = new Date(args.startTime);
        var day = clickedDate.getDay(); // 0 = Sunday, 6 = Saturday

        // Agar clicked date Saturday ya Sunday hai toh click disable kar do
        if (day === 0 || day === 6) {
            args.cancel = true; // Click event ko cancel karo
            return;
        }

        let startTime = args.startTime;

        // Format date without converting to UTC
        let formattedTime = startTime.getFullYear() + "-" +
            ("0" + (startTime.getMonth() + 1)).slice(-2) + "-" +
            ("0" + startTime.getDate()).slice(-2) + "T" +
            ("0" + startTime.getHours()).slice(-2) + ":" +
            ("0" + startTime.getMinutes()).slice(-2) + ":" +
            ("0" + startTime.getSeconds()).slice(-2);

        // Redirect to Appointment page with local time
        window.location.href = `/Appointment?SelectedDateTime=${formattedTime}`;
    }


</script>






<!-- Template to show "Book" on blocked slots -->
<script id="blockTemplate" type="text/x-template">
    <div class="blocked-slot">Not available</div>
</script>

<style>
    .blocked-slot {
        color: white;
        text-align: center;
        font-weight: bold;
        padding: 5px;
        border-radius: 5px;
    }

    .schedule-wrapper {
        height: 100vh; /* Full screen height */
        width: 100%; /* Full width */
    }


    .e-appointment.e-read-only {
        width: 100% !important;
    }

    .e-quick-popup-wrapper.e-lib.e-popup.e-control.e-popup-open {
        display: none;
    }

</style>
