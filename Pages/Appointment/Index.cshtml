@page
@model Patientportal.Pages.Appointment.IndexModel
@{
    List<string> FormofAppointment = new List<string> { "Inclinic", "Video" };
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Appointment</title>

    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/custom.css">
    <link rel="stylesheet" href="~/css/responsive.css">

    <link rel="shortcut icon" href="./favicon.ico" type="image/x-icon">
    <link rel="icon" href="./favicon.ico" type="image/x-icon">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">


</head>
<body>
    <main class="page">
        <div class="container container-x">
            <h1 class="page-title text-28">Book Appointment</h1>

            <div class="ius-block ius-card">
               <div class="d-flex justify-content-between align-items-center">
        <h2>Book Appointment</h2>
        <a href="#" class="bttn bttn-secondary" id="goto-calendar-btn" title="Go to Calendar">Go to Calendar</a>
    </div>

                <form class="ius-form" action="#" method="POST">
                    <input type="hidden" id="PatientId"  name="medicalPatientSignature" class="custom-field-height" />
                    <div class="row">
                        <div class="col-md-6 col-xl-4">
                            <label for="pi-formofappt" class="form-label">Form of Appointment*</label>
                            <ejs-dropdownlist class="form-control" id="pi-formofappt" style="height:45px;" DataSource="FormofAppointment"></ejs-dropdownlist>
                            <span id="pi-formofappt" class="text-danger"></span>
                        </div>   
                        <div class="col-md-6 col-xl-4">
                            <label for="pi-resched" class="form-label">Appointment Date Time*</label>
                            <ejs-datetimepicker id="pi-resched" step="15" min="DateTime.Now" style="height:45px;" value="@Model.SelectedDateTime"  format="@Model.EjsDateTimePattern" readonly="true" ></ejs-datetimepicker>
                            <span id="pi-resched" class="text-danger"></span>
                        </div>

                        <div class="col-md-6 col-xl-4">
                            <label for="pi-name" class="form-label">Name*</label>
                            <input type="text" name="patientname" maxlength="100" class="form-control" id="pi-name">
                            <span id="Namespan" class="text-danger"></span>
                        </div>

                        <div class="col-md-6 col-xl-4">
                            <label for="pi-phoneno" class="form-label">Phone Number*</label>
                          <input type="text" name="phoneno" maxlength="14" class="form-control" id="pi-phoneno">
                            <span id="pi-phoneno" class="text-danger"></span>
                        </div>

                        <div class="col-md-6 col-xl-4">
                            <label for="pi-email" class="form-label">Email*</label>
                            <input type="email" name="email" maxlength="100" class="form-control" id="pi-email">
                            <span id="emailidspan" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 col-xl-4">
                            <label class="form-label">Gender</label>

                            <div class="btn-group" role="group">
                                <input type="radio" class="btn-check" name="gender" id="gender-male">
                                <label class="btn" for="gender-male">Male</label>

                                <input type="radio" class="btn-check" name="gender" id="gender-female">
                                <label class="btn" for="gender-female">Female</label>

                                <input type="radio" class="btn-check" name="gender" id="gender-other">
                                <label class="btn" for="gender-other">Other</label>
                            </div>
                             <span id="Genderspan" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 col-xl-4">
                            <label for="pi-dob" class="form-label">Date of Birth</label>
                              <ejs-datepicker id="pi-dob" class="form-control" format="dd/MM/yyyy" style="height: 45px;"></ejs-datepicker>
                            <span id="dobspan" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 col-xl-4">
                            <label for="pi-age" class="form-label">Age</label>
                            <input type="number" name="age"  maxlength="2" class="form-control" id="pi-age">
                            <span id="agespan" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 col-xl-4">
                            <label for="pi-notes" class="form-label">Notes*</label>
                            <textarea type="Notes" name="age" maxlength="200" id="pi-notes"></textarea>
                            <span id="notesspan" class="text-danger"></span>
                        </div>




                    </div>

                    <div class="form-actions">
                        <a href="#" class="bttn bttn-primary-outline" id="cancel-btn" title="Cancel" >Cancel</a>
                        <a href="#" class="bttn bttn-primary" id="save-btn" title="Save">Save</a>
                    </div>
                </form>
            </div>
            <div class="ius-block ius-card ius-notes">
                <h2 class="mb-2 pb-1 text--red">Notes</h2>
                <ol>
                    <li>Appointment  will be booked for consultation with Dr. Sejal Saheta.</li>
                    <li>For an appointment with an aesthetician for cosmetic procedures please call Clinic - <a href="tel:+91-9639639630" title="91-9639639630">9639639630</a></li>
                </ol>
            </div>
        </div>
    </main>
</body>


</html>
<div class="modal fade" id="successModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" style="margin-top: 154px; max-width: 400px; margin: auto;">
            <div class="modal-body">
                <div class="modal-body text-center">
                    Your appointment has been added successfully 
                </div>
                <div class="modal-footer border-top-0 d-flex justify-content-center">
                    <button id="confirmYes" class="btn d-flex align-items-center gap-1 justify-content-center px-3"
                        style="border-radius: 10px; background: #0061AB; height: 45px; min-width: 120px; font-size: 15px; font-weight: 600; color: #fff;">
                        Thanks 
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.getElementById("pi-age").addEventListener("input", function () {
        if (this.value.length > 2) {
            this.value = this.value.slice(0, 2); // Sirf pehle 2 digits rakho
        }
    });
    document.getElementById("pi-phoneno").addEventListener("input", function (e) {
    this.value = this.value.replace(/[^0-9+]/g, ''); // Allow only numbers and '+'
});
document.addEventListener("DOMContentLoaded", function () {
    document.getElementById("pi-name").addEventListener("input", function () {
        this.value = this.value.replace(/[^A-Za-z\s]/g, ""); // Allow only letters and spaces
    });
});


</script>
<script>
    document.getElementById("goto-calendar-btn").addEventListener("click", function(event) {
        event.preventDefault(); // Default behavior ko rokna
        window.open("/Calendar", "_blank"); // Naye tab me open karna
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
                        var ageInput = document.getElementById("pi-age");
                        var dobPicker = document.getElementById("pi-dob").ej2_instances[0]; // Syncfusion Datepicker instance

                        // Age se Date of Birth calculate karna
                        ageInput.addEventListener("input", function () {
                            var age = parseInt(this.value, 10);
                            if (!isNaN(age) && age > 0) {
                                var today = new Date();
                                var birthYear = today.getFullYear() - age;
                                var birthDate = new Date(birthYear, today.getMonth(), today.getDate());
                                dobPicker.value = birthDate; // Syncfusion Datepicker me set karna
                            }
                        });

                        // Date of Birth se Age calculate karna
                        dobPicker.addEventListener("change", function () {
                            var dob = dobPicker.value;
                            if (dob) {
                                var today = new Date();
                                var birthDate = new Date(dob);
                                var age = today.getFullYear() - birthDate.getFullYear();

                                // Agar DOB ke month aur date aaj ke month aur date se aage hain, toh age -1 karna
                                var monthDiff = today.getMonth() - birthDate.getMonth();
                                if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
                                    age--;
                                }

                                ageInput.value = age; // Age input ko update karna
                            }
                        });
                    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var datepicker = document.getElementById("pi-dob").ej2_instances[0];
        datepicker.max = new Date(); // Aaj ki date tak hi allow karega
    });
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>   
<script src="./js/jquery.min.js"></script>
   <script src="./js/bootstrap.bundle.min.js"></script>
   <script src="./js/custom.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   
<script>
    $(document).ready(function () {
        $("#save-btn").click(function (e) {
            e.preventDefault();

            var isValid = true;

            // Function to show error messages
            function showError(inputId, message) {
                $("#" + inputId).closest(".col-md-6").find(".text-danger").text(message);
            }

            function clearError(inputId) {
                $("#" + inputId).closest(".col-md-6").find(".text-danger").text("");
            }

            // Validate Name
            if ($("#pi-name").val().trim() === "") {
                showError("pi-name", "Name is required.");
                isValid = false;
            } else {
                clearError("pi-name");
            }
            if ($("#pi-formofappt").val().trim() === "") {
                showError("pi-formofappt", "Form of Appointment is required.");
                isValid = false;
            } else {
                clearError("pi-formofappt");
            }

            
            // Validate Appointment Date Time
            if ($("#pi-resched").val().trim() === "") {
                showError("pi-resched", "Appointment Date Time is required.");
                isValid = false;
            } 
            else {
                clearError("pi-resched");
            }

            var dobValue = $("#pi-dob").val(); // Get the DOB input value
            if (dobValue) {
                var dobParts = dobValue.split("/"); // Assuming DD/MM/YYYY format
                var dob = new Date(dobParts[2], dobParts[1] - 1, dobParts[0]); // Convert to Date object
                var today = new Date();
                today.setFullYear(today.getFullYear() - 1); // Subtract 1 year
                today.setHours(0, 0, 0, 0); // Reset time for comparison

                if (dob > today) {
                    showError("pi-dob", "Invalid Date of Birth.");
                    isValid = false;
                } else {
                    clearError("pi-dob");
                }
            }
            // Validate Notes
            if ($("#pi-notes").val().trim() === "") {
                showError("pi-notes", "Notes are required.");
                isValid = false;
            } else {
                clearError("pi-notes");
            }
       

           var email = $("#pi-email").val().trim();
            var emailRegex = /^[\w\.-]+@@[\w\.-]+\.\w+$/; // ✅ Regex for valid email format
            if (email === "") {
                showError("pi-email", "Email is required.");
                isValid = false;
            } else if (!emailRegex.test(email)) {
                showError("pi-email", "Invalid email address.");
                isValid = false;
            } else {
                clearError("pi-email");
            }

                  if ($("#pi-phoneno").val().trim() === "") {
                showError("pi-phoneno", "Phone Number is required.");
                isValid = false;
            }
            else if ($("#pi-phoneno").val().trim().length < 10) {
    showError("pi-phoneno", "Invalid Mobile Number.");
    isValid = false;
}
            else {
                clearError("pi-phoneno");
            }
            // If any validation fails, stop AJAX request
            if (!isValid) {
                return;
            }
            var genderMapping = {
                "gender-male": "Male",
                "gender-female": "Female",
                "gender-other": "Other"
            };

            var selectedGenderId = $("input[name='gender']:checked").attr("id");
            var selectedGender = genderMapping[selectedGenderId] || "";
            var dobValue = $("#pi-dob").val(); // Get the date input
            var AppointmentStartTime = $("#pi-resched").val(); // Get the date input
            var formattedDob = formatDateToMMDDYYYY(dobValue); // Convert to MM/DD/YYYY
            var formattedAppointmentStartTime = formatDateToMMDDYYYY(AppointmentStartTime); // Convert to MM/DD/YYYY

            var formData = {
                Name: $("#pi-name").val(),
                Email: $("#pi-email").val(),
                AppointmentForm: $("#pi-formofappt").val(),
                Mobile: $("#pi-phoneno").val(),
                Comment: $("#pi-notes").val(),
                AppointmentStartTime: formattedAppointmentStartTime,
                Age: $("#pi-age").val(),
                Dob: formattedAppointmentStartTime, // Use formatted date
                Gender: selectedGender
            };

            // Function to convert date to MM/DD/YYYY
            function formatDateToMMDDYYYY(dateString) {
                if (!dateString) return "";

                var parts = dateString.split("/"); // Assuming input format is DD/MM/YYYY
                if (parts.length === 3) {
                    return `${parts[1]}/${parts[0]}/${parts[2]}`; // Convert to MM/DD/YYYY
                }
                return dateString; // Return original if format is unknown
            }


            $.ajax({
                url: "/Appointment/Index?handler=Pireschedule",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(formData),
                success: function (response) {
                               Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Your appointment has been added successfully.',
            confirmButtonText: 'Thanks',
            confirmButtonColor: '#137A5D',
            customClass: {
                popup: 'rounded-3',
                title: 'text-success'
            }
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = "/account"; // Redirect to /account on button click
            }
        });

                },
                error: function (xhr) {
                    alert("Error: " + xhr.responseText);
                }
            });
        });
        $(document).ready(function () {
            // Check if success message flag is set in localStorage
            if (localStorage.getItem("showPatientSuccessMessage") === "true") {
                toastr.success("Patient details saved successfully!"); // Show success message
                localStorage.removeItem("showPatientSuccessMessage"); // Remove flag after showing message
            }
        });
         $("#confirmYes").click(function () {
        window.location.href = "/account"; // Redirect to /account
    });
    });
</script>
<script>
document.getElementById("cancel-btn").addEventListener("click", function (event) {
    event.preventDefault(); // Prevent default anchor behavior
    location.reload(); // Refresh the page
});

</script>